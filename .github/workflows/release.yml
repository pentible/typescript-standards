name: release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Wait for validate job to finish
        uses: pentible/wait-for-check-action@v1.0.1
        with:
          check-name: Validate
      - uses: actions/checkout@v4
      - name: Determine New Version
        id: version
        uses: zwaldowski/semver-release-action@v3
        with:
          dry_run: true
          bump: minor
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Env
        env:
          VERSION: v${{ steps.version.outputs.version }}
        run: echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Update Version In Code
        env:
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
        run: |
          npm version --workspaces --no-git-tag-version "$VERSION"

          git add packages/*/package.json
          git commit -m "bumped version to ${VERSION}"
          git tag "$VERSION"
          git push origin "$VERSION"
      - name: Create Release
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          # NOTE: needs a user token otherwise release events won't be triggered
          GITHUB_TOKEN: ${{ secrets.HUB_TOKEN }}
        run: |
          gh release create \
            --title "$VERSION" \
            --notes '' \
            "$VERSION"
